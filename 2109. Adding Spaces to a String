// 43ms Runtime Beats 17.36%
// 90.88MB Memory Beats 16.53%
public class Solution {
    public string AddSpaces(string s, int[] spaces) {
        char[] array = new char[s.Length + spaces.Length];
        int pointer = 0;

        foreach (int i in spaces)
        {
            array.SetValue(' ', i + pointer);
            pointer++;
        }

        pointer = 0;

        for (int i = 0; i < array.Length; i++)
        {
            if (array[i] != ' ')
            {
                array.SetValue(s[pointer], i);
                pointer++;
            }
        }

        string output = new string(array);

        return output;
    }
}

// Previous attempts
// Leetcode times out during submission. Will have to make solution efficient.

public class Solution {
    public string AddSpaces(string s, int[] spaces) {
        string output = "";

        char[] sArray = s.ToCharArray();

        for (int i = 0; i < sArray.Length; i++)
        {
            if (spaces.Contains(i) && !output.EndsWith(" "))
            {
                output += " ";
                i--;
            }
            else output += sArray[i];
        }

        return output;
    }
}

// This solution is much more succinct, but still exceeds time limits

public class Solution {
    public string AddSpaces(string s, int[] spaces) {
        for (int i = 0; i < spaces.Length; i++)
        {
            s = s.Insert(spaces[i] + i, " ");
        }

        return s;
    }
}
// implement a char array and add spaces in the char array
