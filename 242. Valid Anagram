// New Solution
// 37ms Runtime Beats 14.17%
// 44.8MB Memory Beats 10.06% 
public class Solution {
    public bool IsAnagram(string s, string t) {
        char[] sArray = s.ToCharArray(), tArray = t.ToCharArray();
        Array.Sort(sArray);
        Array.Sort(tArray);
        s = String.Join(' ', sArray);
        t = String.Join(' ', tArray);
        if (s == t) return true;
        else return false;
    }
}

// Old Solution
// 41 ms Runtime Beats 11.34%
// 45.25 MB Memory Beats 7.92%
public class Solution {
    public bool IsAnagram(string s, string t) {
        char[] cArray = [];

        var myStack = new Stack<char>();

        foreach(char c in s)
        {
            myStack.Push(c);
        }

        cArray = [.. myStack];
        Array.Sort(cArray);
        s = String.Join("", cArray);
        myStack.Clear();
        cArray = [];

        foreach (char c in t)
        {
            myStack.Push(c);
        }

        cArray = [.. myStack];
        Array.Sort(cArray);
        t = String.Join("", cArray);

        if (s == t) return true;
        else return false;
    }
}
